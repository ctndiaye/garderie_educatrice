# Generated by Django 4.0.10 on 2023-11-14 15:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Educatrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('adresse', models.TextField(help_text="Adresse de l'educatrice")),
                ('telephone', models.CharField(help_text="Telephone de l'educatrice", max_length=20, unique=True)),
                ('est_qualifie', models.BooleanField(default=True, help_text="L'educatrice est qualifie")),
                ('est_active', models.BooleanField(default=True, help_text="L'educatrice est en activite")),
                ('sexe', models.CharField(choices=[('feminin', 'FEMININ'), ('masculin', 'MASCULIN')], help_text="Le sexe de l'educatrice", max_length=10)),
                ('nom_contact', models.CharField(blank=True, help_text="Nom du contact de l'educatrice", max_length=20, verbose_name='nom_contact')),
                ('prenom_contact', models.CharField(blank=True, help_text="Prenom du contact de l'educatrice", max_length=30, verbose_name='prenom_contact')),
                ('telephone_contact', models.CharField(blank=True, help_text="Telephone du contact de l'educatrice", max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('insert', 'INSERT'), ('update', 'UPDATE'), ('delete', 'DELETE')], max_length=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heure_evenement', models.DateTimeField(auto_now_add=True)),
                ('type_evenement', models.CharField(choices=[('arrive', 'ARRIVE'), ('depart', 'DEPART')], help_text="Heure d'arrivé ou de départ", max_length=6)),
                ('educatrice', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
