name: Garderie Educatrice
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python Educatrice project
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies for Educatrice project
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Linting project with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true
      - name: Creating database for test
        run: |
          sudo /etc/init.d/mysql start
          mysql --user=root --password=root --execute="CREATE DATABASE IF NOT EXISTS db_educatrice;"
          mysql --user=root --password=root --execute="CREATE DATABASE IF NOT EXISTS db_educatrice_test;"
          mysql -h 127.0.0.1 -uroot -proot --execute="show databases;"
      - name: Making database migration
        run: python manage.py migrate
      - name: Testing the project using pytest
        run: |
          pip install pytest-cov
          mysql -h 127.0.0.1 -uroot -proot --execute="show databases;"
          pytest educatrice/tests/tests_*.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=com --cov-report=xml --cov-report=html
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}